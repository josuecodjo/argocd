apiVersion: v1
kind: Service
metadata:
  name: flask
  labels:
    app: flask
spec:
  ports:
    - port: 30100
  selector:
    app: flask
    tier: frontend
  type: ClusterIP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: flask
  labels:
    app: flask
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`flask.joshlab.home`)
      kind: Rule
      services:
        - name: flask
          port: 30100
  tls:
    certResolver: letsencrypt
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flask-pv-claim
  labels:
    app: flask
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
  labels:
    app: flask
spec:
  selector:
    matchLabels:
      app: flask
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flask
        tier: frontend
    spec:
      containers:
      - image: josuecodjo/flask_app
        name: flask
        env:
        - name: DBNAME
          value: restaurant
        - name: DBHOST
          value: flask-postgresql
        - name: DBPASS
          valueFrom:
            secretKeyRef:
              name: postgresql-pass
              key: password
        - name: DBUSER
          value: root
        ports:
        - containerPort: 30100
          name: flask
        volumeMounts:
        - name: flask-persistent-storage
          mountPath: /opt/app
      volumes:
      - name: flask-persistent-storage
        persistentVolumeClaim:
          claimName: flask-pv-claim