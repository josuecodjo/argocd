apiVersion: v1
kind: Service
metadata:
  name: flask
  labels:
    app: flask
spec:
  ports:
    - port: 30100
  selector:
    app: flask
    tier: frontend
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flask-pv-claim
  labels:
    app: flask
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
  labels:
    app: flask
spec:
  selector:
    matchLabels:
      app: flask
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flask
        tier: frontend
    spec:
      containers:
      - image: josuecodjo/flask_app
        imagePullPolicy: Always
        name: flask
        # command: ["/bin/bash"]
        # args: ["-c","while sleep 0.01; do echo 'OK'; done"]
        #args: ["-c","/opt/app/start_app.sh"]
        envFrom:
        - configMapRef:
            name: flask
        env:
        - name: DBPASS
          valueFrom:
            secretKeyRef:
              name: postgresql-pass
              key: password
        ports:
        - containerPort: 30100
          name: flask
        volumeMounts:
        - name: flask-persistent-storage
          mountPath: /tmp
      volumes:
      - name: flask-persistent-storage
        persistentVolumeClaim:
          claimName: flask-pv-claim